(function(){if(window.Catalyst===undefined)throw"Catalyst Core not included.";CodeLeaf.Bundles={Store:{},register:function(e,t){var n=new CodeLeaf.Bundle(t);this.Store[e.toLowerCase()]=n;this[e]=n},unregister:function(e){delete this.Store[e.toLowerCase()];delete this[e]},get:function(e){return this.Store[e.toLowerCase()]}};CodeLeaf.Bundle=new Class({relatedTo:[],SyntaxTokens:{},TypingPairs:{},Autocomplete:{},Tooltips:{},Snippets:{},KeyBindings:{},construct:function(e){var t=this;e=Object.append(e,{relatedTo:[],SyntaxTokens:{},TypingPairs:{},Autocomplete:{},Tooltips:{},Snippets:{},KeyBindings:{}});this.relatedTo=e.relatedTo;this.SyntaxTokens=e.SyntaxTokens;this.TypingPairs=e.TypingPairs;this.Autocomplete=e.Autocomplete;this.Tooltips=e.Tooltips;this.Snippets=e.Snippets;this.KeyBindings=e.KeyBindings;e.hasOwnProperty("extends")===!0&&e.extends.forEach(function(e,n){var r,i,s,o,u;if(typeOf(e)=="array"){i=e[1];r=e[0]}else r=e;var a=r.split(":");if(a.length===2){u=a[1];o=a[0];s=CodeLeaf.Bundles[o];t.relatedTo.push(o);s.hasOwnProperty(u)===!0&&(i!==undefined?t[u]=Object.append({scope:{regex:i,subToken:s[u]}},t[u]):t[u]=Object.append(s[u],t[u]))}else{u=null;o=a.pop();s=CodeLeaf.Bundles[o];["SyntaxTokens","TypingPairs","Autocomplete","Tooltips","Snippets","KeyBindings"].forEach(function(e){s.hasOwnProperty(e)===!0&&(t[e]=Object.append(s[e],t[e]))})}})},hasTypingPair:function(e){return this.TypingPairs.hasOwnProperty(e)},typingPair:function(e){return this.TypingPairs[e]},hasSnippet:function(e){if(typeOf(this.Snippets)==="object")return this.Snippets.hasOwnProperty(e)}})}).call(window);